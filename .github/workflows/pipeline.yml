name: Atualiza Jurimetria → GPT

on:
  # botão “Run workflow” no GitHub
  workflow_dispatch:
    inputs:
      tribunais:
        description: "Lista de tribunais (ex.: 'TJCE TJSP') – vazio = TJCE"
        required: false
        default: ""
  # agenda diária (03 h UTC ≅ 00 h BRT)
  schedule:
    - cron: '0 3 * * *'

jobs:
  build-upload:
    runs-on: ubuntu-latest

    # segredos expostos a TODOS os passos
    env:
      CNJ_API_KEY:  ${{ secrets.CNJ_API_KEY }}   # usado pelo pipeline principal
      DATAJUD_TOKEN: ${{ secrets.CNJ_API_KEY }}  # reutilizado pelo conector legado

    steps:
      - uses: actions/checkout@v4

      - name: ⚙️ Configura Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📥 Instala dependências
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # ──────────────────────────────────────────────
      - name: 🧪 Run tests
        run: |
          pytest -q

      # ──────────────────────────────────────────────
      - name: 🚀 Executa pipeline Jurimetria
        run: |
          python src/jurimetria_pipeline.py ${{ github.event.inputs.tribunais }}

      - name: 🐍 Executa conector ESAJ legado
        run: |
          python legacy/legacy_datajud_connector.py esaj \
            --classe "Apelação Cível" \
            --save dados_jurimetria/legacy_esaj.json

      - name: 🐍 Executa conector DataJud legado
        run: |
          python legacy/legacy_datajud_connector.py datajud \
            --classe "Apelação Cível" \
            --save dados_jurimetria/legacy_datajud.json
      # ──────────────────────────────────────────────

      - name: 📦 Faz upload de artefatos
        uses: actions/upload-artifact@v4
        with:
          name: datasets
          path: |
            dados_jurimetria/*.parquet
            dados_jurimetria/*.csv
            dados_jurimetria/*.jpg
            dados_jurimetria/legacy_*.json
